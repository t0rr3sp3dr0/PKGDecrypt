//
//   Generated by https://github.com/blacktop/ipsw (Version: , BuildCommit: )
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 14.4, SDK: 14.4, Tools: [ld (902.8), ld (951.9)]
//    - LC_SOURCE_VERSION: 714.4.9.0.0
//
#ifndef HashedDownloadProvider_h
#define HashedDownloadProvider_h

#include <CommonCrypto/CommonDigest.h>

@import Foundation;
@import PackageKit;

@class ISDataProvider, SSDownloadAsset; // @import StoreFoundation;
@class SZExtractor; // @import StreamingZip;

// @interface HashedDownloadProvider : ISDataProvider <NSCopying> {
//     /* instance variables */
//     struct KBCryptOpaque_ * _cryptRef;
//     NSMutableData *_buffer;
//     NSError *_error;
//     signed char _decryptionDisabled;
//     int _fileDescriptor;
//     CC_MD5_CTX _md5Context;
//     CC_SHA256_CTX _sha256Context;
//     signed char _disableHashCheck;
//     NSObject<OS_dispatch_queue> *_decryptQueue;
//     NSObject<OS_dispatch_semaphore> *_decryptSemaphore;
//     SZExtractor *_szExtractor;
//     PKStreamingProduct *_pkExtractor;
//     signed char _useLegacyFairPlayStub;
//     struct MASCOpaque * _legacyCryptRef;
// }
// 
// @property (retain) SSDownloadAsset *asset;
// @property (retain) NSData *dpInfo;
// @property long long hashAlgorithm;
// @property (retain) NSArray *hashes;
// @property (retain) NSArray *clearHashes;
// @property (retain) NSString *localFilePath;
// @property long long numberOfBytesToHash;
// @property long long streamedBytes;
// @property long long validatedBytes;
// @property signed char useBackgroundPriority;
// @property signed char extractionCanBeStreamed;
// 
// /* class methods */
// + (id)providerWithAsset:(id)_withAsset dpInfo:(id)_info streamExtraction:(signed char)_extraction storeClient:(id)_client;
// 
// /* instance methods */
// - (id)initWithAsset:(id)_asset dpInfo:(id)_info streamExtraction:(signed char)_extraction storeClient:(id)_client;
// - (void)dealloc;
// - (id)copyWithZone:(struct _NSZone *)_zone;
// - (signed char)canDecryptOnTheFly;
// - (signed char)needsDecryption;
// - (signed char)shouldUseStreamingExtractor;
// - (id)onDiskHashes;
// - (void)setup;
// - (signed char)parseData:(id)_data returningError:(id *)_error;
// - (void)closeStreamReturningError:(id *)_streamReturningError;
// - (signed char)isStream;
// - (void)resetStream;
// - (signed char)truncateToSize:(long long)_toSize;
// - (void)_decryptAndHashBufferWithDownloadFinished:(signed char)_andHashBufferWithDownloadFinished;
// - (signed char)_verifyData:(id)_data withHashes:(id)_hashes writeToFile:(signed char)_toFile returningError:(id *)_error didValidateInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)_validateInRange;
// - (void)_verifyStreamedBytesWithHashes:(id)_streamedBytesWithHashes;
// - (signed char)_checkHashForByteCount:(long long)_hashForByteCount withHashes:(id)_hashes errorDetails:(id)_details;
// - (signed char)_openFiles;
// - (int)_openFileAtPath:(id)_fileAtPath returningStreamedByteCount:(long long *)_streamedByteCount;
// - (void)_closeFiles;
// - (void)_finish;
// 
// @end

@class HashedDownloadProvider;

#endif /* HashedDownloadProvider_h */
