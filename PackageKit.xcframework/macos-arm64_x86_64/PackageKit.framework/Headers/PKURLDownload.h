//
//   Generated by https://github.com/blacktop/ipsw (Version: , BuildCommit: )
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 14.4, SDK: 14.4, Tool: ld (951.9)
//    - LC_SOURCE_VERSION: 1338.0.0.0.0
//
#ifndef PKURLDownload_h
#define PKURLDownload_h

@import Foundation;

#include "PKDownload.h"
#include "PKDownloadDelegate-Protocol.h"
#include "PKURLTransport.h"

@class IASChunklist; // @import IASUtilitiesCore;

@interface PKURLDownload : PKDownload <PKDownloadDelegate> {
    /* instance variables */
    id <PKDownloadDelegate, NSObject> _delegate;
}

@property (retain) NSThread *delegateThread;
@property (retain) NSURL *fileURL;
@property (retain) NSURL *chunklistURL;
@property (retain) NSNumber *chunklistSize;
@property signed char overwriteAllowed;
@property (copy) id /* block */ connectionChallengeBlock;
@property (copy) id /* block */ sessionChallengeBlock;
@property (retain, nonatomic) NSLock *downloaderLock;
@property signed char cancelled;
@property (retain) PKURLTransport *chunklistTransport;
@property (retain) PKURLTransport *fileTransport;
@property (retain, nonatomic) NSFileHandle *fileHandle;
@property (retain, nonatomic) NSFileHandle *chunklistHandle;
@property (retain, nonatomic) IASChunklist *chunklist;
@property (retain, nonatomic) NSData *chunklistHash;
@property (retain) NSData *fileResumeData;
@property (retain) NSData *chunklistResumeData;

/* class methods */
+ (signed char)canDownloadURL:(id)_downloadURL;
+ (signed char)canDownloadWithResumeData:(id)_downloadWithResumeData;

/* instance methods */
- (void)dealloc;
- (id)delegate;
- (void)start;
- (void)cancel;
- (void)download:(id)_download didFailWithError:(id)_failWithError;
- (void)download:(id)_download didReceiveDataOfLength:(unsigned long long)_receiveDataOfLength;
- (void)download:(id)_download didReceiveResponse:(id)_receiveResponse;
- (id)download:(id)_download willSendRequest:(id)_sendRequest redirectResponse:(id)_response;
- (void)downloadDidBegin:(id)_didBegin;
- (void)downloadDidFinish:(id)_didFinish;
- (id)resumeData;
- (void)setDestination:(id)_destination allowOverwrite:(signed char)_overwrite;
- (void)__runBlock:(id /* block */)_block;
- (void)_runBlockOnThread:(id)_blockOnThread withBlock:(id /* block */)_block waitUntilDone:(signed char)_untilDone;
- (id)sourceURL;
- (id)sourcePath;
- (signed char)_appendFileURL:(id)_fileURL toURL:(id)_url;
- (void)_asyncDownloadChunklist;
- (void)_beginDownloadOfURL:(id)_downloadOfURL acceptingRanges:(signed char)_ranges withExpectedLength:(long long)_expectedLength withQueue:(id)_queue;
- (void)_downloadChunk:(id)_chunk usingQueue:(id)_queue withChunkIndex:(unsigned long long)_chunkIndex withChunkSizes:(id)_chunkSizes withChunksValid:(id)_chunksValid withChunkAttempt:(unsigned long long)_chunkAttempt withBytesDownloadedSoFor:(unsigned long long)_bytesDownloadedSoFor withReply:(id /* block */)_reply;
- (id)_localPathFromRemoteURL:(id)_pathFromRemoteURL appendingExtension:(signed char)_extension;
- (void)_populateChunklistFromDiskIfExists;
- (void)_runBlockOnDelegateThread:(id /* block */)_blockOnDelegateThread waitUntilDone:(signed char)_untilDone;
- (void)_startAsyncFileDownload;
- (id)_validateChunklistIntegrityAndReturnChunklistForHandle:(id)_chunklistIntegrityAndReturnChunklistForHandle withOutHash:(id *)_outHash withError:(id *)_error;
- (signed char)_verifyFileIntegrityAgainstChunklist:(id)_fileIntegrityAgainstChunklist withRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })_range;
- (void)download:(id)_download didCheckDataOfLength:(unsigned long long)_checkDataOfLength;
- (void)download:(id)_download didReceiveChallenge:(id)_receiveChallenge withCompletionHandler:(id /* block */)_completionHandler;
- (void)download:(id)_download receiveLogWithLevel:(unsigned long long)_logWithLevel withLogMesage:(id)_logMesage;
- (void)download:(id)_download receivedResumeBytesOfLength:(long long)_resumeBytesOfLength;
- (void)download:(id)_download willSendRequestForAuthenticationChallenge:(id)_sendRequestForAuthenticationChallenge;
- (void)establishAuthenticationChallengeBlocks;
- (signed char)failedDownloadValidation;
- (id)initWithResumeData:(id)_resumeData destination:(id)_destination delegate:(id)_delegate;
- (id)initWithURL:(id)_url withChunklistURL:(id)_chunklistURL withChunklistSize:(id)_chunklistSize delegate:(id)_delegate;
- (signed char)validatesDuringDownload;

@end

#endif /* PKURLDownload_h */
