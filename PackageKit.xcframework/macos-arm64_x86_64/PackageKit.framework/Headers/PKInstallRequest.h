//
//   Generated by https://github.com/blacktop/ipsw (Version: , BuildCommit: )
//
//    - LC_BUILD_VERSION:  Platform: macOS, MinOS: 14.4, SDK: 14.4, Tool: ld (951.9)
//    - LC_SOURCE_VERSION: 1338.0.0.0.0
//
#ifndef PKInstallRequest_h
#define PKInstallRequest_h

@import Foundation;

@interface PKInstallRequest : NSObject <NSSecureCoding> {
    /* instance variables */
    signed char _useForegroundPriorityForStaging;
    double _frameworkVersion;
    NSString *_clientProcessName;
    signed char _openScripts;
    signed char _internalBundleVersionChecking;
    NSString *_scriptTargetVolume;
    NSString *_loggingIdentifier;
    signed char _ignoreIndexBom;
    signed char _useAFSCByDefault;
    signed char _isRecursive;
    NSData *_appStoreReceiptData;
    NSData *_appStoreMetadata;
    unsigned long long _spaceRequiredForInstall;
    signed char _clientBlocksRestart;
    int _restartAction;
    NSString *_appPlaceholderPath;
    NSArray *_lockApplicationsDuringInstall;
    NSString *_blacklistPropertyListPath;
    NSFileHandle *_translocationFileHandle;
    signed char _bypassSystemVolumeEnforcementChecker;
    signed char _isOSInstall;
    signed char _isSoftwareUpdateOSInstall;
    signed char _isOSInstaller;
    NSString *_masterBOMPath;
    unsigned long long _packageExtractorSpeed;
    signed char _disableAFSC;
    signed char _isMDMManagedAppInstall;
    NSDictionary *_untrustedEnvironment;
    NSMachPort *_clientBootstrapPort;
    NSMachPort *_clientSecuritySessionPort;
    int _clientUID;
    int _clientGID;
    struct { unsigned int x0; void *x1; } * _authorizationEnvironment;
    struct AuthorizationOpaqueRef * _defaultAuthorization;
    struct AuthorizationOpaqueRef * _overrideAuthorization;
    int _minTrustLevel;
    signed char _allowExpiredCertificates;
    signed char _allowExpiredRoots;
    signed char _didPassPreflight;
    signed char _hasValidTrustLevel;
    int _evaluatedTrustLevel;
    NSArray *_certificateChain;
    NSSet *_teamIdentifiers;
    struct __SecTrust * _trustRef;
    NSDictionary *_policyMetPackageURLsToDigests;
}

@property (retain, nonatomic) NSString *responsibleHostedTeamIdentifier;
@property (readonly) NSArray *packages;
@property (readonly) NSArray *packageSpecifiers;
@property (retain) NSString *destinationPath;
@property long long installPhases;
@property (readonly) struct { unsigned int x0[8]; } clientAuditToken;
@property signed char userConsentedInstall;
@property long long rosettaTranslationMode;

/* class methods */
+ (signed char)supportsSecureCoding;
+ (id)requestWithPackages:(id)_withPackages destination:(id)_destination;

/* instance methods */
- (void)dealloc;
- (id)description;
- (id)init;
- (signed char)isEqual:(id)_equal;
- (void)encodeWithCoder:(id)_withCoder;
- (id)initWithCoder:(id)_coder;
- (struct AuthorizationOpaqueRef *)authorization;
- (void)setAuthorization:(struct AuthorizationOpaqueRef *)_authorization;
- (id)_clientProcessName;
- (signed char)_isStageRequest;
- (signed char)_clientBlocksRestart;
- (int)_clientUID;
- (int)_restartAction;
- (void)_setClientBlocksRestart:(signed char)_clientBlocksRestart;
- (void)_setInternalBundleVersionChecking:(signed char)_internalBundleVersionChecking;
- (void)_setLoggingIdentifier:(id)_loggingIdentifier;
- (void)_setRestartAction:(int)_restartAction;
- (void)_setSpaceRequiredForInstall:(unsigned long long)_spaceRequiredForInstall;
- (void)_setUseOpenScriptsDirectory:(signed char)_useOpenScriptsDirectory;
- (signed char)evaluateTrustReturningError:(id *)_trustReturningError;
- (id)initWithPackages:(id)_packages destination:(id)_destination;
- (void)removePackageSpecifiers:(id)_packageSpecifiers;
- (void)setMinimumRequiredTrustLevel:(int)_minimumRequiredTrustLevel;
- (int)trustLevelReturningCertificateChain:(id *)_levelReturningCertificateChain;
- (id)_loggingIdentifier;
- (signed char)requiresAuthorization;
- (signed char)_isRecursive;
- (signed char)_isRequestCompatibleWithRights:(id)_requestCompatibleWithRights;
- (signed char)_useHFSPlusCompressionByDefault;
- (signed char)_ignoreIndexBom;
- (id)teamIdentifiers;
- (id)_appPlaceholderPath;
- (id)_appStoreMetadata;
- (id)_appStoreReceiptData;
- (int)_authLevel;
- (id)_authorizationAsExternalData;
- (signed char)_bypassReadOnlyEnforcementChecker;
- (signed char)_canInstallPackageSpecifier:(id)_installPackageSpecifier error:(id *)_error;
- (void)_clearTrustEvaluation;
- (id)_clientBootstrapPort;
- (int)_clientGID;
- (id)_clientSecuritySessionPort;
- (signed char)_containsAppleSoftwareOnly;
- (struct AuthorizationOpaqueRef *)_createAuthorizationRefWithExternalFormData:(id)_authorizationRefWithExternalFormData;
- (signed char)_disableAFSC;
- (signed char)_evaluateTrustForPackage:(id)_trustForPackage verifyingPayload:(signed char)_payload returningError:(id *)_error;
- (id)_externalFormDataForAuthorizationRef:(struct AuthorizationOpaqueRef *)_formDataForAuthorizationRef;
- (unsigned long long)_extractionSpeed;
- (signed char)_hasValidInstallPathForAnyIAPContent;
- (id)_initWithPackages:(id)_withPackages destination:(id)_destination withOutError:(id *)_outError;
- (id)_installBlacklistPlistPath;
- (id)_installItems;
- (id)_installSandboxName;
- (signed char)_internalBundleVersionChecking;
- (signed char)_isDeeplyEqualToRequest:(id)_deeplyEqualToRequest;
- (signed char)_isMDMManagedAppInstall;
- (signed char)_isOSInstall;
- (signed char)_isOSInstaller;
- (signed char)_isRequestFromMacAppStore;
- (signed char)_isRequestFromSoftwareUpdate;
- (signed char)_isRequestFromTestFlight;
- (signed char)_isSoftwareUpdateOSInstall;
- (signed char)_isValidAppStoreRequest:(signed char)_validAppStoreRequest;
- (id)_lockApplicationsDuringInstall;
- (id)_masterBOMPath;
- (signed char)_performPreflightCheckIncludingSizing:(signed char)_preflightCheckIncludingSizing error:(id *)_error;
- (id)_policyMetPackageURLsToDigests;
- (signed char)_privilegedRequest;
- (void)_resolveInstallPathsReplacingPriorResults:(signed char)_installPathsReplacingPriorResults;
- (signed char)_restrictedRootEnabled;
- (id)_scriptTargetVolume;
- (void)_setAppPlaceholderPath:(id)_appPlaceholderPath;
- (void)_setAppStoreMetadata:(id)_appStoreMetadata;
- (void)_setAppStoreReceiptData:(id)_appStoreReceiptData;
- (void)_setBypassReadOnlyEnforcementChecker:(signed char)_bypassReadOnlyEnforcementChecker;
- (void)_setClientBootstrapPort:(id)_clientBootstrapPort;
- (void)_setClientSecuritySessionPort:(id)_clientSecuritySessionPort;
- (void)_setClientUID:(int)_clientUID andGID:(int)_gid;
- (void)_setDisableAFSC:(signed char)_disableAFSC;
- (void)_setExtractionSpeed:(unsigned long long)_extractionSpeed;
- (void)_setIgnoreIndexBom:(signed char)_ignoreIndexBom;
- (void)_setInstallBlacklistPlistPath:(id)_installBlacklistPlistPath;
- (void)_setInstallSandboxName:(id)_installSandboxName;
- (void)_setIsMDMManagedAppInstall:(signed char)_isMDMManagedAppInstall;
- (void)_setIsOSInstall:(signed char)_isOSInstall;
- (void)_setIsOSInstaller:(signed char)_isOSInstaller;
- (void)_setIsRecursive:(signed char)_isRecursive;
- (void)_setIsSoftwareUpdateOSInstall:(signed char)_isSoftwareUpdateOSInstall;
- (void)_setIsStageRequest:(signed char)_isStageRequest;
- (void)_setLockApplicationsDuringInstall:(id)_lockApplicationsDuringInstall;
- (void)_setMasterBOMPath:(id)_masterBOMPath;
- (void)_setPolicyMetPackageURLsToDigests:(id)_policyMetPackageURLsToDigests;
- (void)_setScriptTargetVolume:(id)_scriptTargetVolume;
- (void)_setSkipsVerifyOnUnsignedPackages:(signed char)_skipsVerifyOnUnsignedPackages;
- (void)_setTranslocationFileHandle:(id)_translocationFileHandle;
- (void)_setUntrustedEnvironment:(id)_untrustedEnvironment;
- (void)_setUseForegroundPriorityForStaging:(signed char)_useForegroundPriorityForStaging;
- (void)_setUseHFSPlusCompressionByDefault:(signed char)_useHFSPlusCompressionByDefault;
- (unsigned long long)_spaceRequiredForInstall;
- (id)_untrustedEnvironment;
- (void)_updateWithSingleTrustLevel:(int)_withSingleTrustLevel certificateChain:(id)_chain trust:(struct __SecTrust *)_trust;
- (signed char)_useForegroundPriorityForStaging;
- (signed char)_useOpenScriptsDirectory;
- (signed char)_validAttributesForSoftwareUpdate:(id)_attributesForSoftwareUpdate;
- (signed char)_validateAuthorizationReturningAcquiredRights:(id *)_authorizationReturningAcquiredRights;
- (signed char)authorizeForRight:(const char *)_forRight allowingInteraction:(signed char)_interaction;
- (signed char)checkLocalPackagesReturningError:(id *)_localPackagesReturningError;
- (signed char)didPassPreflightCheck;
- (signed char)performPreflightCheckReturningError:(id *)_preflightCheckReturningError;
- (signed char)preauthorizeAllowingInteraction:(signed char)_allowingInteraction;
- (void)setAllowExpiredCertificates:(signed char)_allowExpiredCertificates;
- (void)setAllowExpiredRoots:(signed char)_allowExpiredRoots;
- (void)setAuthorizationEnvironment:(struct { unsigned int x0; void *x1; } *)_authorizationEnvironment;
- (unsigned long long)totalSizeRequired;
- (int)trustLevelReturningTrustRef:(struct __SecTrust * *)_levelReturningTrustRef;

@end

#endif /* PKInstallRequest_h */
